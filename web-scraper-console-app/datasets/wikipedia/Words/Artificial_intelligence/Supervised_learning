supervised learning from wikipedia the free encyclopedia jump to navigation jump to search machine learning task part of a series onmachine learningand data mining paradigms supervised learning unsupervised learning online learning batch learning semi supervised learning self supervised learning reinforcement learning problems classification regression clustering dimension reduction density estimation anomaly detection data cleaning automl association rules structured prediction feature engineering feature learning learning to rank grammar induction supervised learning classification 160 8226 32 regression decision trees ensembles bagging boosting random forest k nn linear regression naive bayes artificial neural networks logistic regression perceptron relevance vector machine rvm support vector machine svm clustering birch cure hierarchical k means fuzzy expectation maximization em dbscan optics mean shift dimensionality reduction factor analysis cca ica lda nmf pca pgd t sne sdl structured prediction graphical models bayes net conditional random field hidden markov anomaly detection ransac k nn local outlier factor isolation forest artificial neural network autoencoder cognitive computing deep learning deepdream multilayer perceptron rnn lstm gru esn reservoir computing restricted boltzmann machine gan som convolutional neural network u net transformer vision spiking neural network memtransistor electrochemical ram ecram reinforcement learning q learning sarsa temporal difference td multi agent self play learning with humans active learning crowdsourcing human in the loop model diagnostics learning curve theory kernel machines bias variance tradeoff computational learning theory empirical risk minimization occam learning pac learning statistical learning vc theory machine learning venues neurips icml iclr ml jmlr related articles glossary of artificial intelligence list of datasets for machine learning research outline of machine learning vte see also unsupervised learning supervised learning sl is a machine learning paradigm for problems where the available data consists of labelled examples meaning that each data point contains features covariates and an associated label the goal of supervised learning algorithms is learning a function that maps feature vectors inputs to labels output based on example input output pairs 91 1 93 it infers a function from labeled training data consisting of a set of training examples 91 2 93 in supervised learning each example is a pair consisting of an input object typically a vector and a desired output value also called the supervisory signal a supervised learning algorithm analyzes the training data and produces an inferred function which can be used for mapping new examples an optimal scenario will allow for the algorithm to correctly determine the class labels for unseen instances this requires the learning algorithm to generalize from the training data to unseen situations in a reasonable way see inductive bias this statistical quality of an algorithm is measured through the so called generalization error contents 1 steps to follow 2 algorithm choice 2 1 bias variance tradeoff 2 2 function complexity and amount of training data 2 3 dimensionality of the input space 2 4 noise in the output values 2 5 other factors to consider 2 6 algorithms 3 how supervised learning algorithms work 3 1 empirical risk minimization 3 2 structural risk minimization 4 generative training 5 generalizations 6 approaches and algorithms 7 applications 8 general issues 9 see also 10 references 11 external links steps to follow edit to solve a given problem of supervised learning one has to perform the following steps determine the type of training examples before doing anything else the user should decide what kind of data is to be used as a training set in the case of handwriting analysis for example this might be a single handwritten character an entire handwritten word an entire sentence of handwriting or perhaps a full paragraph of handwriting gather a training set the training set needs to be representative of the real world use of the function thus a set of input objects is gathered and corresponding outputs are also gathered either from human experts or from measurements determine the input feature representation of the learned function the accuracy of the learned function depends strongly on how the input object is represented typically the input object is transformed into a feature vector which contains a number of features that are descriptive of the object the number of features should not be too large because of the curse of dimensionality but should contain enough information to accurately predict the output determine the structure of the learned function and corresponding learning algorithm for example the engineer may choose to use support vector machines or decision trees complete the design run the learning algorithm on the gathered training set some supervised learning algorithms require the user to determine certain control parameters these parameters may be adjusted by optimizing performance on a subset called a validation set of the training set or via cross validation evaluate the accuracy of the learned function after parameter adjustment and learning the performance of the resulting function should be measured on a test set that is separate from the training set algorithm choice edit a wide range of supervised learning algorithms are available each with its strengths and weaknesses there is no single learning algorithm that works best on all supervised learning problems see the no free lunch theorem there are four major issues to consider in supervised learning bias variance tradeoff edit main article bias variance dilemma a first issue is the tradeoff between bias and variance 91 3 93 imagine that we have available several different but equally good training data sets a learning algorithm is biased for a particular input x displaystyle x if when trained on each of these data sets it is systematically incorrect when predicting the correct output for x displaystyle x a learning algorithm has high variance for a particular input x displaystyle x if it predicts different output values when trained on different training sets the prediction error of a learned classifier is related to the sum of the bias and the variance of the learning algorithm 91 4 93 generally there is a tradeoff between bias and variance a learning algorithm with low bias must be flexible so that it can fit the data well but if the learning algorithm is too flexible it will fit each training data set differently and hence have high variance a key aspect of many supervised learning methods is that they are able to adjust this tradeoff between bias and variance either automatically or by providing a bias variance parameter that the user can adjust function complexity and amount of training data edit the second issue is of the amount of training data available relative to the complexity of the true function classifier or regression function if the true function is simple then an inflexible learning algorithm with high bias and low variance will be able to learn it from a small amount of data but if the true function is highly complex e g because it involves complex interactions among many different input features and behaves differently in different parts of the input space then the function will only be able to learn with a large amount of training data paired with a flexible learning algorithm with low bias and high variance dimensionality of the input space edit a third issue is the dimensionality of the input space if the input feature vectors have large dimensions learning the function can be difficult even if the true function only depends on a small number of those features this is because the many extra dimensions can confuse the learning algorithm and cause it to have high variance hence input data of large dimensions typically requires tuning the classifier to have low variance and high bias in practice if the engineer can manually remove irrelevant features from the input data it will likely improve the accuracy of the learned function in addition there are many algorithms for feature selection that seek to identify the relevant features and discard the irrelevant ones this is an instance of the more general strategy of dimensionality reduction which seeks to map the input data into a lower dimensional space prior to running the supervised learning algorithm noise in the output values edit a fourth issue is the degree of noise in the desired output values the supervisory target variables if the desired output values are often incorrect because of human error or sensor errors then the learning algorithm should not attempt to find a function that exactly matches the training examples attempting to fit the data too carefully leads to overfitting you can overfit even when there are no measurement errors stochastic noise if the function you are trying to learn is too complex for your learning model in such a situation the part of the target function that cannot be modeled corrupts your training data this phenomenon has been called deterministic noise when either type of noise is present it is better to go with a higher bias lower variance estimator in practice there are several approaches to alleviate noise in the output values such as early stopping to prevent overfitting as well as detecting and removing the noisy training examples prior to training the supervised learning algorithm there are several algorithms that identify noisy training examples and removing the suspected noisy training examples prior to training has decreased generalization error with statistical significance 91 5 93 91 6 93 other factors to consider edit other factors to consider when choosing and applying a learning algorithm include the following heterogeneity of the data if the feature vectors include features of many different kinds discrete discrete ordered counts continuous values some algorithms are easier to apply than others many algorithms including support vector machines linear regression logistic regression neural networks and nearest neighbor methods require that the input features be numerical and scaled to similar ranges e g to the 1 1 interval methods that employ a distance function such as nearest neighbor methods and support vector machines with gaussian kernels are particularly sensitive to this an advantage of decision trees is that they easily handle heterogeneous data redundancy in the data if the input features contain redundant information e g highly correlated features some learning algorithms e g linear regression logistic regression and distance based methods will perform poorly because of numerical instabilities these problems can often be solved by imposing some form of regularization presence of interactions and non linearities if each of the features makes an independent contribution to the output then algorithms based on linear functions e g linear regression logistic regression support vector machines naive bayes and distance functions e g nearest neighbor methods support vector machines with gaussian kernels generally perform well however if there are complex interactions among features then algorithms such as decision trees and neural networks work better because they are specifically designed to discover these interactions linear methods can also be applied but the engineer must manually specify the interactions when using them when considering a new application the engineer can compare multiple learning algorithms and experimentally determine which one works best on the problem at hand see cross validation tuning the performance of a learning algorithm can be very time consuming given fixed resources it is often better to spend more time collecting additional training data and more informative features than it is to spend extra time tuning the learning algorithms algorithms edit the most widely used learning algorithms are support vector machines linear regression logistic regression naive bayes linear discriminant analysis decision trees k nearest neighbor algorithm neural networks multilayer perceptron similarity learning how supervised learning algorithms work edit given a set of n displaystyle n training examples of the form x 1 y 1 x n y n displaystyle x 1 y 1 x n y n such that x i displaystyle x i is the feature vector of the i displaystyle i th example and y i displaystyle y i is its label i e class a learning algorithm seeks a function g x x2192 y displaystyle g x to y where x displaystyle x is the input space and y displaystyle y is the output space the function g displaystyle g is an element of some space of possible functions g displaystyle g usually called the hypothesis space it is sometimes convenient to represent g displaystyle g using a scoring function f x x00d7 y x2192 r displaystyle f x times y to mathbb r such that g displaystyle g is defined as returning the y displaystyle y value that gives the highest score g x arg x2061 max y f x y displaystyle g x underset y arg max f x y let f displaystyle f denote the space of scoring functions although g displaystyle g and f displaystyle f can be any space of functions many learning algorithms are probabilistic models where g displaystyle g takes the form of a conditional probability model g x p y x displaystyle g x p y x or f displaystyle f takes the form of a joint probability model f x y p x y displaystyle f x y p x y for example naive bayes and linear discriminant analysis are joint probability models whereas logistic regression is a conditional probability model there are two basic approaches to choosing f displaystyle f or g displaystyle g empirical risk minimization and structural risk minimization 91 7 93 empirical risk minimization seeks the function that best fits the training data structural risk minimization includes a penalty function that controls the bias variance tradeoff in both cases it is assumed that the training set consists of a sample of independent and identically distributed pairs x i y i displaystyle x i y i in order to measure how well a function fits the training data a loss function l y x00d7 y x2192 r x2265 0 displaystyle l y times y to mathbb r geq 0 is defined for training example x i y i displaystyle x i y i the loss of predicting the value y x005e displaystyle hat y is l y i y x005e displaystyle l y i hat y the risk r g displaystyle r g of function g displaystyle g is defined as the expected loss of g displaystyle g this can be estimated from the training data as r e m p g 1 n x2211 i l y i g x i displaystyle r emp g frac 1 n sum i l y i g x i empirical risk minimization edit main article empirical risk minimization in empirical risk minimization the supervised learning algorithm seeks the function g displaystyle g that minimizes r g displaystyle r g hence a supervised learning algorithm can be constructed by applying an optimization algorithm to find g displaystyle g when g displaystyle g is a conditional probability distribution p y x displaystyle p y x and the loss function is the negative log likelihood l y y x005e x2212 log x2061 p y x displaystyle l y hat y log p y x then empirical risk minimization is equivalent to maximum likelihood estimation when g displaystyle g contains many candidate functions or the training set is not sufficiently large empirical risk minimization leads to high variance and poor generalization the learning algorithm is able to memorize the training examples without generalizing well this is called overfitting structural risk minimization edit structural risk minimization seeks to prevent overfitting by incorporating a regularization penalty into the optimization the regularization penalty can be viewed as implementing a form of occam s razor that prefers simpler functions over more complex ones a wide variety of penalties have been employed that correspond to different definitions of complexity for example consider the case where the function g displaystyle g is a linear function of the form g x x2211 j 1 d x03b2 j x j displaystyle g x sum j 1 d beta j x j a popular regularization penalty is x2211 j x03b2 j 2 displaystyle sum j beta j 2 which is the squared euclidean norm of the weights also known as the l 2 displaystyle l 2 norm other norms include the l 1 displaystyle l 1 norm x2211 j x03b2 j displaystyle sum j beta j and the l 0 displaystyle l 0 norm which is the number of non zero x03b2 j displaystyle beta j s the penalty will be denoted by c g displaystyle c g the supervised learning optimization problem is to find the function g displaystyle g that minimizes j g r e m p g x03bb c g displaystyle j g r emp g lambda c g the parameter x03bb displaystyle lambda controls the bias variance tradeoff when x03bb 0 displaystyle lambda 0 this gives empirical risk minimization with low bias and high variance when x03bb displaystyle lambda is large the learning algorithm will have high bias and low variance the value of x03bb displaystyle lambda can be chosen empirically via cross validation the complexity penalty has a bayesian interpretation as the negative log prior probability of g displaystyle g x2212 log x2061 p g displaystyle log p g in which case j g displaystyle j g is the posterior probability of g displaystyle g generative training edit the training methods described above are discriminative training methods because they seek to find a function g displaystyle g that discriminates well between the different output values see discriminative model for the special case where f x y p x y displaystyle f x y p x y is a joint probability distribution and the loss function is the negative log likelihood x2212 x2211 i log x2061 p x i y i displaystyle sum i log p x i y i a risk minimization algorithm is said to perform generative training because f displaystyle f can be regarded as a generative model that explains how the data were generated generative training algorithms are often simpler and more computationally efficient than discriminative training algorithms in some cases the solution can be computed in closed form as in naive bayes and linear discriminant analysis generalizations edit there are several ways in which the standard supervised learning problem can be generalized semi supervised learning in this setting the desired output values are provided only for a subset of the training data the remaining data is unlabeled weak supervision in this setting noisy limited or imprecise sources are used to provide supervision signal for labeling training data active learning instead of assuming that all of the training examples are given at the start active learning algorithms interactively collect new examples typically by making queries to a human user often the queries are based on unlabeled data which is a scenario that combines semi supervised learning with active learning structured prediction when the desired output value is a complex object such as a parse tree or a labeled graph then standard methods must be extended learning to rank when the input is a set of objects and the desired output is a ranking of those objects then again the standard methods must be extended approaches and algorithms edit analytical learning artificial neural network backpropagation boosting meta algorithm bayesian statistics case based reasoning decision tree learning inductive logic programming gaussian process regression genetic programming group method of data handling kernel estimators learning automata learning classifier systems learning vector quantization minimum message length decision trees decision graphs etc multilinear subspace learning naive bayes classifier maximum entropy classifier conditional random field nearest neighbor algorithm probably approximately correct learning pac learning ripple down rules a knowledge acquisition methodology symbolic machine learning algorithms subsymbolic machine learning algorithms support vector machines minimum complexity machines mcm random forests ensembles of classifiers ordinal classification data pre processing handling imbalanced datasets statistical relational learning proaftn a multicriteria classification algorithm applications edit bioinformatics cheminformatics quantitative structure activity relationship database marketing handwriting recognition information retrieval learning to rank information extraction object recognition in computer vision optical character recognition spam detection pattern recognition speech recognition supervised learning is a special case of downward causation in biological systems landform classification using satellite imagery 91 8 93 spend classification in procurement processes 91 9 93 general issues edit computational learning theory inductive bias overfitting machine learning uncalibrated class membership probabilities unsupervised learning version spaces see also edit list of datasets for machine learning research references edit stuart j russell peter norvig 2010 artificial intelligence a modern approach third edition prentice hall isbn 160 9780136042594 mehryar mohri afshin rostamizadeh ameet talwalkar 2012 foundations of machine learning the mit press isbn 160 9780262018258 s geman e bienenstock and r doursat 1992 neural networks and the bias variance dilemma neural computation 4 1 58 g james 2003 variance and bias for general loss functions machine learning 51 115 135 http www bcf usc edu gareth research bv pdf c e brodely and m a friedl 1999 identifying and eliminating mislabeled training instances journal of artificial intelligence research 11 131 167 http jair org media 606 live 606 1803 jair pdf m r smith and t martinez 2011 improving classification accuracy by identifying and removing instances that should be misclassified proceedings of international joint conference on neural networks ijcnn 2011 pp 160 2690 2697 citeseerx 160 10 1 1 221 1371 doi 10 1109 ijcnn 2011 6033571 vapnik v n the nature of statistical learning theory 2nd ed springer verlag 2000 a maity 2016 supervised classification of radarsat 2 polarimetric data for different land features arxiv 1608 00501 cs cv key technologies for agile procurement sipmm publications publication sipmm edu sg 2020 10 09 retrieved 2022 06 16 external links edit machine learning open source software mloss vtedifferentiable computinggeneral differentiable programming information geometry statistical manifold automatic differentiation neuromorphic engineering cable theory pattern recognition tensor calculus computational learning theory inductive bias concepts gradient descent sgd clustering regression overfitting adversary attention convolution loss functions backpropagation normalization activation softmax sigmoid rectifier regularization datasets augmentation diffusion autoregression programming languages python julia swift application machine learning artificial neural network deep learning scientific computing artificial intelligence hardware ipu tpu vpu memristor spinnaker software library tensorflow pytorch keras theano jax implementationaudio visual alexnet wavenet human image synthesis hwr ocr speech synthesis speech recognition facial recognition alphafold dall e midjourney stable diffusion verbal word2vec transformer bert lamda nmt project debater ibm watson gpt 2 gpt 3 decisional alphago alphazero q learning sarsa openai five self driving car muzero action selection robot control people yoshua bengio alex graves ian goodfellow demis hassabis geoffrey hinton yann lecun fei fei li andrew ng j rgen schmidhuber david silver organizations deepmind openai mit csail mila google brain meta ai architectures neural turing machine differentiable neural computer transformer recurrent neural network rnn long short term memory lstm gated recurrent unit gru echo state network multilayer perceptron mlp convolutional neural network residual network autoencoder variational autoencoder vae generative adversarial network gan graph neural network portals computer programming technology category artificial neural networks machine learning authority control national libraries israel united states retrieved from https en wikipedia org w index php title supervised learning amp oldid 1129335559 categories supervised learninghidden categories articles with short descriptionshort description is different from wikidataarticles with j9u identifiersarticles with lccn identifiers 