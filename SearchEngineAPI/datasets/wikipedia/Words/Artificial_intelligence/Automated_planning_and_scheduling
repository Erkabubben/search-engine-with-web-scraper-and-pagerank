automated planning and scheduling from wikipedia the free encyclopedia jump to navigation jump to search branch of artificial intelligence this article includes a list of general references but it lacks sufficient corresponding inline citations please help to improve this article by introducing more precise citations january 2012 learn how and when to remove this template message part of a series onartificial intelligence major goals artificial general intelligence planning computer vision general game playing knowledge reasoning machine learning natural language processing robotics approaches symbolic deep learning bayesian networks evolutionary algorithms philosophy chinese room friendly ai control problem takeover ethics existential risk turing test history timeline progress ai winter technology applications projects programming languages glossary glossary vte automated planning and scheduling sometimes denoted as simply ai planning 91 1 93 is a branch of artificial intelligence that concerns the realization of strategies or action sequences typically for execution by intelligent agents autonomous robots and unmanned vehicles unlike classical control and classification problems the solutions are complex and must be discovered and optimized in multidimensional space planning is also related to decision theory in known environments with available models planning can be done offline solutions can be found and evaluated prior to execution in dynamically unknown environments the strategy often needs to be revised online models and policies must be adapted solutions usually resort to iterative trial and error processes commonly seen in artificial intelligence these include dynamic programming reinforcement learning and combinatorial optimization languages used to describe planning and scheduling are often called action languages contents 1 overview 2 domain independent planning 3 planning domain modelling languages 4 algorithms for planning 4 1 classical planning 4 2 reduction to other problems 4 3 temporal planning 4 4 probabilistic planning 4 5 preference based planning 4 6 conditional planning 4 6 1 contingent planning 4 6 2 conformant planning 5 deployment of planning systems 6 see also 7 references 8 further reading 9 external links overview edit further information state space search this section needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed february 2021 learn how and when to remove this template message given a description of the possible initial states of the world a description of the desired goals and a description of a set of possible actions the planning problem is to synthesize a plan that is guaranteed when applied to any of the initial states to generate a state which contains the desired goals such a state is called a goal state the difficulty of planning is dependent on the simplifying assumptions employed several classes of planning problems can be identified depending on the properties the problems have in several dimensions are the actions deterministic or non deterministic for nondeterministic actions are the associated probabilities available are the state variables discrete or continuous if they are discrete do they have only a finite number of possible values can the current state be observed unambiguously there can be full observability and partial observability how many initial states are there finite or arbitrarily many do actions have a duration can several actions be taken concurrently or is only one action possible at a time is the objective of a plan to reach a designated goal state or to maximize a reward function is there only one agent or are there several agents are the agents cooperative or selfish do all of the agents construct their own plans separately or are the plans constructed centrally for all agents the simplest possible planning problem known as the classical planning problem is determined by a unique known initial state durationless actions deterministic actions which can be taken only one at a time and a single agent since the initial state is known unambiguously and all actions are deterministic the state of the world after any sequence of actions can be accurately predicted and the question of observability is irrelevant for classical planning further plans can be defined as sequences of actions because it is always known in advance which actions will be needed with nondeterministic actions or other events outside the control of the agent the possible executions form a tree and plans have to determine the appropriate actions for every node of the tree discrete time markov decision processes mdp are planning problems with durationless actions nondeterministic actions with probabilities full observability maximization of a reward function and a single agent when full observability is replaced by partial observability planning corresponds to partially observable markov decision process pomdp if there are more than one agent we have multi agent planning which is closely related to game theory domain independent planning edit this section needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed february 2021 learn how and when to remove this template message in ai planning planners typically input a domain model a description of a set of possible actions which model the domain as well as the specific problem to be solved specified by the initial state and goal in contrast to those in which there is no input domain specified such planners are called domain independent to emphasize the fact that they can solve planning problems from a wide range of domains typical examples of domains are block stacking logistics workflow management and robot task planning hence a single domain independent planner can be used to solve planning problems in all these various domains on the other hand a route planner is typical of a domain specific planner planning domain modelling languages edit this section needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed february 2021 learn how and when to remove this template message the most commonly used languages for representing planning domains and specific planning problems such as strips and pddl for classical planning are based on state variables each possible state of the world is an assignment of values to the state variables and actions determine how the values of the state variables change when that action is taken since a set of state variables induce a state space that has a size that is exponential in the set planning similarly to many other computational problems suffers from the curse of dimensionality and the combinatorial explosion an alternative language for describing planning problems is that of hierarchical task networks in which a set of tasks is given and each task can be either realized by a primitive action or decomposed into a set of other tasks this does not necessarily involve state variables although in more realistic applications state variables simplify the description of task networks algorithms for planning edit classical planning edit forward chaining state space search possibly enhanced with heuristics backward chaining search possibly enhanced by the use of state constraints see strips graphplan partial order planning see also sussman anomaly reduction to other problems edit reduction to the propositional satisfiability problem satplan reduction to model checking both are essentially problems of traversing state spaces and the classical planning problem corresponds to a subclass of model checking problems temporal planning edit temporal planning can be solved with methods similar to classical planning the main difference is because of the possibility of several temporally overlapping actions with a duration being taken concurrently that the definition of a state has to include information about the current absolute time and how far the execution of each active action has proceeded further in planning with rational or real time the state space may be infinite unlike in classical planning or planning with integer time temporal planning is closely related to scheduling problems when uncertainty is involved and can also be understood in terms of timed automata the simple temporal network with uncertainty stnu is a scheduling problem which involves controllable actions uncertain events and temporal constraints dynamic controllability for such problems is a type of scheduling which requires a temporal planning strategy to activate controllable actions reactively as uncertain events are observed so that all constraints are guaranteed to be satisfied 91 2 93 probabilistic planning edit main articles markov decision process and partially observable markov decision process probabilistic planning can be solved with iterative methods such as value iteration and policy iteration when the state space is sufficiently small with partial observability probabilistic planning is similarly solved with iterative methods but using a representation of the value functions defined for the space of beliefs instead of states preference based planning edit main article preference based planning in preference based planning the objective is not only to produce a plan but also to satisfy user specified preferences a difference to the more common reward based planning for example corresponding to mdps preferences don t necessarily have a precise numerical value conditional planning edit deterministic planning was introduced with the strips planning system which is a hierarchical planner action names are ordered in a sequence and this is a plan for the robot hierarchical planning can be compared with an automatic generated behavior tree 91 3 93 the disadvantage is that a normal behavior tree is not so expressive like a computer program that means the notation of a behavior graph contains action commands but no loops or if then statements conditional planning overcomes the bottleneck and introduces an elaborated notation which is similar to a control flow known from other programming languages like pascal it is very similar to program synthesis which means a planner generates sourcecode which can be executed by an interpreter 91 4 93 an early example of a conditional planner is warplan c which was introduced in the mid 1970s 91 5 93 what is the difference between a normal sequence and a complicated plan which contains if then statements it has to do with uncertainty at runtime of a plan the idea is that a plan can react to sensor signals which are unknown for the planner the planner generates two choices in advance for example if an object was detected then action a is executed if an object is missing then action b is executed 91 6 93 a major advantage of conditional planning is the ability to handle partial plans 91 7 93 an agent is not forced to plan everything from start to finish but can divide the problem into chunks this helps to reduce the state space and solves much more complex problems contingent planning edit we speak of contingent planning when the environment is observable through sensors which can be faulty it is thus a situation where the planning agent acts under incomplete information for a contingent planning problem a plan is no longer a sequence of actions but a decision tree because each step of the plan is represented by a set of states rather than a single perfectly observable state as in the case of classical planning 91 8 93 the selected actions depend on the state of the system for example if it rains the agent chooses to take the umbrella and if it doesn t they may choose not to take it michael l littman showed in 1998 that with branching actions the planning problem becomes exptime complete 91 9 93 91 10 93 a particular case of contiguous planning is represented by fond problems for fully observable and non deterministic if the goal is specified in ltlf linear time logic on finite trace then the problem is always exptime complete 91 11 93 and 2exptime complete if the goal is specified with ldlf conformant planning edit conformant planning is when the agent is uncertain about the state of the system and it cannot make any observations the agent then has beliefs about the real world but cannot verify them with sensing actions for instance these problems are solved by techniques similar to those of classical planning 91 12 93 91 13 93 but where the state space is exponential in the size of the problem because of the uncertainty about the current state a solution for a conformant planning problem is a sequence of actions haslum and jonsson have demonstrated that the problem of conformant planning is expspace complete 91 14 93 and 2exptime complete when the initial situation is uncertain and there is non determinism in the actions outcomes 91 10 93 deployment of planning systems edit the hubble space telescope uses a short term system called spss and a long term planning system called spike 91 citation needed 93 see also edit action description language actor model applications of artificial intelligence constraint satisfaction problem reactive planning scheduling computing strategy game theory lists list of smt solvers list of constraint programming languages list of emerging technologies outline of artificial intelligence references edit ghallab malik nau dana s traverso paolo 2004 automated planning theory and practice morgan kaufmann isbn 160 1 55860 856 7 vidal thierry january 1999 handling contingency in temporal constraint networks from consistency to controllabilities journal of experimental amp theoretical artificial intelligence 11 1 23 45 citeseerx 160 10 1 1 107 1065 doi 10 1080 095281399146607 neufeld xenija and mostaghim sanaz and sancho pradel dario and brand sandy 2017 building a planner a survey of planning systems used in commercial video games ieee transactions on games ieee cite journal cs1 maint multiple names authors list link sanelli valerio and cashmore michael and magazzeni daniele and iocchi luca 2017 short term human robot interaction through conditional planning and execution proc of international conference on automated planning and scheduling icaps cite conference cs1 maint multiple names authors list link peot mark a and smith david e 1992 conditional nonlinear planning pdf artificial intelligence planning systems elsevier pp 160 189 197 cite conference cs1 maint multiple names authors list link karlsson lars 2001 conditional progressive planning under uncertainty ijcai pp 160 431 438 liu daphne hao 2008 a survey of planning in intelligent agents from externally motivated to internally motivated systems technical report technical report tr 2008 936 department of computer science university of rochester alexandre albore hector palacios hector geffner 2009 a translation based approach to contingent planning international joint conference of artificial intelligence ijcai pasadena ca aaai littman michael l 1997 probabilistic propositional planning representations and complexity fourteenth national conference on artificial intelligence mit press pp 160 748 754 retrieved 2019 02 10 a b jussi rintanen 2004 complexity of planning with partial observability pdf int conf automated planning and scheduling aaai de giacomo giuseppe rubin sasha 2018 automata theoretic foundations of fond planning for ltlf and ldlf goals ijcai retrieved 2018 07 17 palacios hector geffner hector 2009 compiling uncertainty away in conformant planning problems with bounded width journal of artificial intelligence research 35 623 675 doi 10 1613 jair 2708 albore alexandre ram rez miquel geffner hector 2011 effective heuristics and belief tracking for planning with incomplete information twenty first international conference on automated planning and scheduling icaps haslum patrik jonsson peter 2000 some results on the complexity of planning with incomplete information recent advances in ai planning lecture notes in computer science springer berlin heidelberg 1809 308 318 doi 10 1007 10720246 24 isbn 160 9783540446576 further reading edit vlahavas i planning and scheduling eetn archived from the original on 2013 12 22 external links edit international conference on automated planning and scheduling retrieved from https en wikipedia org w index php title automated planning and scheduling amp oldid 1121106172 categories automated planning and schedulinghidden categories cs1 maint multiple names authors listarticles with short descriptionshort description is different from wikidataarticles lacking in text citations from january 2012all articles lacking in text citationsarticles needing additional references from february 2021all articles needing additional referencesall articles with unsourced statementsarticles with unsourced statements from february 2021 