church turing thesis from wikipedia the free encyclopedia jump to navigation jump to search thesis on the nature of computability church s thesis redirects here for the axiom ct in constructive mathematics see church s thesis constructive mathematics in computability theory the church turing thesis also known as computability thesis 91 1 93 the turing church thesis 91 2 93 the church turing conjecture church s thesis church s conjecture and turing s thesis is a thesis about the nature of computable functions it states that a function on the natural numbers can be calculated by an effective method if and only if it is computable by a turing machine the thesis is named after american mathematician alonzo church and the british mathematician alan turing before the precise definition of computable function mathematicians often used the informal term effectively calculable to describe functions that are computable by paper and pencil methods in the 1930s several independent attempts were made to formalize the notion of computability in 1933 kurt g del with jacques herbrand formalized the definition of the class of general recursive functions the smallest class of functions with arbitrarily many arguments that is closed under composition recursion and minimization and includes zero successor and all projections in 1936 alonzo church created a method for defining functions called the calculus within calculus he defined an encoding of the natural numbers called the church numerals a function on the natural numbers is called computable if the corresponding function on the church numerals can be represented by a term of the calculus also in 1936 before learning of church s work 91 6 93 alan turing created a theoretical model for machines now called turing machines that could carry out calculations from inputs by manipulating symbols on a tape given a suitable encoding of the natural numbers as sequences of symbols a function on the natural numbers is called turing computable if some turing machine computes the corresponding function on encoded natural numbers church 91 7 93 kleene 91 8 93 and turing 91 9 93 91 11 93 proved that these three formally defined classes of computable functions coincide a function is computable if and only if it is turing computable and if and only if it is general recursive this has led mathematicians and computer scientists to believe that the concept of computability is accurately characterized by these three equivalent processes other formal attempts to characterize computability have subsequently strengthened this belief see below on the other hand the church turing thesis states that the above three formally defined classes of computable functions coincide with the informal notion of an effectively calculable function although the thesis has near universal acceptance it cannot be formally proven as the concept of effective calculability is only informally defined since its inception variations on the original thesis have arisen including statements about what can physically be realized by a computer in our universe physical church turing thesis and what can be efficiently computed church turing thesis complexity theory these variations are not due to church or turing but arise from later work in complexity theory and digital physics the thesis also has implications for the philosophy of mind see below contents 1 statement in church s and turing s words 2 history 2 1 circa 1930 1952 2 2 later developments 2 3 the thesis as a definition 3 success of the thesis 4 informal usage in proofs 5 variations 6 philosophical implications 7 non computable functions 8 see also 9 footnotes 10 references 11 external links statement in church s and turing s words edit see also effective method j b 32 rosser 160 1939 addresses the notion of effective computability as follows clearly the existence of cc and rc church s and rosser s proofs presupposes a precise definition of effective effective method is here used in the rather special sense of a method each step of which is precisely predetermined and which is certain to produce the answer in a finite number of steps 91 12 93 thus the adverb adjective effective is used in a sense of 1a producing a decided decisive or desired effect and capable of producing a result 91 13 93 91 14 93 in the following the words effectively calculable will mean produced by any intuitively effective means whatsoever and effectively computable will mean produced by a turing machine or equivalent mechanical device turing s definitions given in a footnote in his 1938 ph d thesis systems of logic based on ordinals supervised by church are virtually the same we shall use the expression computable function to mean a function calculable by a machine and let effectively calculable refer to the intuitive idea without particular identification with any one of these definitions 91 15 93 the thesis can be stated as every effectively calculable function is a computable function 91 16 93 church also stated that no computational procedure will be considered as an algorithm unless it can be represented as a turing machine 91 citation needed 93 turing stated it this way it was stated 160 that a function is effectively calculable if its values can be found by some purely mechanical process we may take this literally understanding that by a purely mechanical process one which could be carried out by a machine the development 160 leads to 160 an identification of computability with effective calculability is the footnote quoted above 91 15 93 history edit main article history of the church turing thesis one of the important problems for logicians in the 1930s was the entscheidungsproblem of david hilbert and wilhelm ackermann 91 17 93 which asked whether there was a mechanical procedure for separating mathematical truths from mathematical falsehoods this quest required that the notion of algorithm or effective calculability be pinned down at least well enough for the quest to begin 91 18 93 but from the very outset alonzo church s attempts began with a debate that continues to this day 91 19 93 was 91 clarify 93 the notion of effective calculability to be i an axiom or axioms in an axiomatic system ii merely a definition that identified two or more propositions iii an empirical hypothesis to be verified by observation of natural events or iv just a proposal for the sake of argument i e a thesis circa 1930 1952 edit in the course of studying the problem church and his student stephen kleene introduced the notion of definable functions and they were able to prove that several large classes of functions frequently encountered in number theory were definable 91 20 93 the debate began when church proposed to g del that one should define the effectively computable functions as the definable functions g del however was not convinced and called the proposal thoroughly unsatisfactory 91 21 93 rather in correspondence with church c 1934 1935 g del proposed axiomatizing the notion of effective calculability indeed in a 1935 letter to kleene church reported that his g del s only idea at the time was that it might be possible in terms of effective calculability as an undefined notion to state a set of axioms which would embody the generally accepted properties of this notion and to do something on that basis 91 22 93 but g del offered no further guidance eventually he would suggest his recursion modified by herbrand s suggestion that g del had detailed in his 1934 lectures in princeton nj kleene and rosser transcribed the notes but he did not think that the two ideas could be satisfactorily identified except heuristically 91 23 93 next it was necessary to identify and prove the equivalence of two notions of effective calculability equipped with the calculus and general recursion kleene with help of church and j barkley rosser produced proofs 1933 1935 to show that the two calculi are equivalent church subsequently modified his methods to include use of herbrand g del recursion and then proved 1936 that the entscheidungsproblem is unsolvable there is no algorithm that can determine whether a well formed formula has a beta normal form 91 24 93 many years later in a letter to davis c 1965 g del said that he was at the time of these 1934 lectures not at all convinced that his concept of recursion comprised all possible recursions 91 25 93 by 1963 1964 g del would disavow herbrand g del recursion and the calculus in favor of the turing machine as the definition of algorithm or mechanical procedure or formal system 91 26 93 a hypothesis leading to a natural law in late 1936 alan turing s paper also proving that the entscheidungsproblem is unsolvable was delivered orally but had not yet appeared in print 91 27 93 on the other hand emil post s 1936 paper had appeared and was certified independent of turing s work 91 28 93 post strongly disagreed with church s identification of effective computability with the calculus and recursion stating actually the work already done by church and others carries this identification considerably beyond the working hypothesis stage but to mask this identification under a definition blinds us to the need of its continual verification 91 29 93 rather he regarded the notion of effective calculability as merely a working hypothesis that might lead by inductive reasoning to a natural law rather than by a definition or an axiom 91 30 93 this idea was sharply criticized by church 91 31 93 thus post in his 1936 paper was also discounting kurt g del s suggestion to church in 1934 1935 that the thesis might be expressed as an axiom or set of axioms 91 22 93 turing adds another definition rosser equates all three within just a short time turing s 1936 1937 paper on computable numbers with an application to the entscheidungsproblem 91 27 93 appeared in it he stated another notion of effective computability with the introduction of his a machines now known as the turing machine abstract computational model and in a proof sketch added as an appendix to his 1936 1937 paper turing showed that the classes of functions defined by calculus and turing machines coincided 91 32 93 church was quick to recognise how compelling turing s analysis was in his review of turing s paper he made clear that turing s notion made the identification with effectiveness in the ordinary not explicitly defined sense evident immediately 91 33 93 in a few years 1939 turing would propose like church and kleene before him that his formal definition of mechanical computing agent was the correct one 91 34 93 thus by 1939 both church 1934 and turing 1939 had individually proposed that their formal systems should be definitions of effective calculability 91 35 93 neither framed their statements as theses rosser 1939 formally identified the three notions as definitions all three definitions are equivalent so it does not matter which one is used 91 36 93 kleene proposes thesis i this left the overt expression of a thesis to kleene in 1943 kleene proposed his thesis i 91 37 93 this heuristic fact general recursive functions are effectively calculable 160 led church to state the following thesis the same thesis is implicit in turing s description of computing machines thesis i every effectively calculable function effectively decidable predicate is general recursive kleene s italics since a precise mathematical definition of the term effectively calculable effectively decidable has been wanting we can take this thesis 160 as a definition of it 160 the thesis has the character of an hypothesis a point emphasized by post and by church if we consider the thesis and its converse as definition then the hypothesis is an hypothesis about the application of the mathematical theory developed from the definition for the acceptance of the hypothesis there are as we have suggested quite compelling grounds the church turing thesis stephen kleene in introduction to metamathematics finally goes on to formally name church s thesis and turing s thesis using his theory of recursive realizability kleene having switched from presenting his work in the terminology of church kleene lambda definability to that of g del kleene recursiveness partial recursive functions in this transition kleene modified g del s general recursive functions to allow for proofs of the unsolvability of problems in the intuitionism of e j brouwer in his graduate textbook on logic church s thesis is introduced and basic mathematical results are demonstrated to be unrealizable next kleene proceeds to present turing s thesis where results are shown to be uncomputable using his simplified derivation of a turing machine based on the work of emil post both theses are proven equivalent by use of theorem xxx thesis i every effectively calculable function effectively decidable predicate is general recursive 91 38 93 theorem xxx the following classes of partial functions are coextensive i e have the same members a the partial recursive functions b the computable functions 160 91 39 93 turing s thesis turing s thesis that every function which would naturally be regarded as computable is computable under his definition i e by one of his machines is equivalent to church s thesis by theorem xxx 91 39 93 kleene finally uses for the first time the term the church turing thesis in a section in which he helps to give clarifications to concepts in alan turing s paper the word problem in semi groups with cancellation as demanded in a critique from william boone 91 40 93 later developments edit an attempt to understand the notion of effective computability better led robin gandy turing s student and friend in 1980 to analyze machine computation as opposed to human computation acted out by a turing machine gandy s curiosity about and analysis of cellular automata including conway s game of life parallelism and crystalline automata led him to propose four principles or constraints 160 which it is argued any machine must satisfy 91 41 93 his most important fourth the principle of causality is based on the finite velocity of propagation of effects and signals contemporary physics rejects the possibility of instantaneous action at a distance 91 42 93 from these principles and some additional constraints 1a a lower bound on the linear dimensions of any of the parts 1b an upper bound on speed of propagation the velocity of light 2 discrete progress of the machine and 3 deterministic behavior he produces a theorem that what can be calculated by a device satisfying principles i iv is computable 91 43 93 in the late 1990s wilfried sieg analyzed turing s and gandy s notions of effective calculability with the intent of sharpening the informal notion formulating its general features axiomatically and investigating the axiomatic framework 91 44 93 in his 1997 and 2002 work sieg presents a series of constraints on the behavior of a computor a human computing agent who proceeds mechanically these constraints reduce to b 1 boundedness there is a fixed bound on the number of symbolic configurations a computor can immediately recognize b 2 boundedness there is a fixed bound on the number of internal states a computor can be in l 1 locality a computor can change only elements of an observed symbolic configuration l 2 locality a computor can shift attention from one symbolic configuration to another one but the new observed configurations must be within a bounded distance of the immediately previously observed configuration d determinacy the immediately recognizable sub configuration determines uniquely the next computation step and id instantaneous description stated another way a computor s internal state together with the observed configuration fixes uniquely the next computation step and the next internal state 91 45 93 the matter remains in active discussion within the academic community 91 46 93 91 47 93 the thesis as a definition edit the thesis can be viewed as nothing but an ordinary mathematical definition comments by g del on the subject suggest this view e g the correct definition of mechanical computability was established beyond any doubt by turing 91 48 93 the case for viewing the thesis as nothing more than a definition is made explicitly by robert i soare 91 5 93 where it is also argued that turing s definition of computability is no less likely to be correct than the epsilon delta definition of a continuous function success of the thesis edit other formalisms besides recursion the calculus and the turing machine have been proposed for describing effective calculability computability kleene 1952 adds to the list the functions reckonable in the system s1 of kurt g del 1936 and emil post s 1943 1946 canonical also called normal systems 91 49 93 in the 1950s hao wang and martin davis greatly simplified the one tape turing machine model see post turing machine marvin minsky expanded the model to two or more tapes and greatly simplified the tapes into up down counters which melzak and lambek further evolved into what is now known as the counter machine model in the late 1960s and early 1970s researchers expanded the counter machine model into the register machine a close cousin to the modern notion of the computer other models include combinatory logic and markov algorithms gurevich adds the pointer machine model of kolmogorov and uspensky 1953 1958 160 they just wanted to 160 convince themselves that there is no way to extend the notion of computable function 91 50 93 all these contributions involve proofs that the models are computationally equivalent to the turing machine such models are said to be turing complete because all these different attempts at formalizing the concept of effective calculability computability have yielded equivalent results it is now generally assumed that the church turing thesis is correct in fact g del 1936 proposed something stronger than this he observed that there was something absolute about the concept of reckonable in s1 it may also be shown that a function which is computable reckonable in one of the systems si or even in a system of transfinite type is already computable reckonable in s1 thus the concept computable reckonable is in a certain definite sense absolute while practically all other familiar metamathematical concepts e g provable definable etc depend quite essentially on the system to which they are defined 160 91 51 93 informal usage in proofs edit proofs in computability theory often invoke the church turing thesis in an informal way to establish the computability of functions while avoiding the often very long details which would be involved in a rigorous formal proof 91 52 93 to establish that a function is computable by turing machine it is usually considered sufficient to give an informal english description of how the function can be effectively computed and then conclude by the church turing thesis that the function is turing computable equivalently partial recursive dirk van dalen gives the following example for the sake of illustrating this informal use of the church turing thesis 91 53 93 example each infinite re set contains an infinite recursive set proof let a be infinite re we list the elements of a effectively n0 n1 n2 n3 from this list we extract an increasing sublist put m0 160 n0 after finitely many steps we find an nk such that nk gt m0 put m1 160 nk we repeat this procedure to find m2 gt m1 etc this yields an effective listing of the subset b m0 m1 m2 of a with the property mi lt mi 1 claim b is decidable for in order to test k in b we must check if k 160 mi for some i since the sequence of mi s is increasing we have to produce at most k 1 elements of the list and compare them with k if none of them is equal to k then k not in b since this test is effective b is decidable and by church s thesis recursive in order to make the above example completely rigorous one would have to carefully construct a turing machine or function or carefully invoke recursion axioms or at best cleverly invoke various theorems of computability theory but because the computability theorist believes that turing computability correctly captures what can be computed effectively and because an effective procedure is spelled out in english for deciding the set b the computability theorist accepts this as proof that the set is indeed recursive variations edit the success of the church turing thesis prompted variations of the thesis to be proposed for example the physical church turing thesis states all physically computable functions are turing computable 91 54 93 58 8202 101 8202 the church turing thesis says nothing about the efficiency with which one model of computation can simulate another it has been proved for instance that a multi tape universal turing machine only suffers a logarithmic slowdown factor in simulating any turing machine 91 55 93 a variation of the church turing thesis addresses whether an arbitrary but reasonable model of computation can be efficiently simulated this is called the feasibility thesis 91 56 93 also known as the classical complexity theoretic church turing thesis or the extended church turing thesis which is not due to church or turing but rather was realized gradually in the development of complexity theory it states 91 57 93 a probabilistic turing machine can efficiently simulate any realistic model of computation the word efficiently here means up to polynomial time reductions this thesis was originally called computational complexity theoretic church turing thesis by ethan bernstein and umesh vazirani 1997 the complexity theoretic church turing thesis then posits that all reasonable models of computation yield the same class of problems that can be computed in polynomial time assuming the conjecture that probabilistic polynomial time bpp equals deterministic polynomial time p the word probabilistic is optional in the complexity theoretic church turing thesis a similar thesis called the invariance thesis was introduced by cees f slot and peter van emde boas it states reasonable machines can simulate each other within a polynomially bounded overhead in time and a constant factor overhead in space 91 58 93 the thesis originally appeared in a paper at stoc 84 which was the first paper to show that polynomial time overhead and constant space overhead could be simultaneously achieved for a simulation of a random access machine on a turing machine 91 59 93 if bqp is shown to be a strict superset of bpp it would invalidate the complexity theoretic church turing thesis in other words there would be efficient quantum algorithms that perform tasks that do not have efficient probabilistic algorithms this would not however invalidate the original church turing thesis since a quantum computer can always be simulated by a turing machine but it would invalidate the classical complexity theoretic church turing thesis for efficiency reasons consequently the quantum complexity theoretic church turing thesis states 91 57 93 a quantum turing machine can efficiently simulate any realistic model of computation eugene eberbach and peter wegner claim that the church turing thesis is sometimes interpreted too broadly stating though turing machines express the behavior of algorithms the broader assertion that algorithms precisely capture what can be computed is invalid 91 60 93 they claim that forms of computation not captured by the thesis are relevant today terms which they call super turing computation philosophical implications edit philosophers have interpreted the church turing thesis as having implications for the philosophy of mind 91 61 93 91 62 93 91 63 93 b jack copeland states that it is an open empirical question whether there are actual deterministic physical processes that in the long run elude simulation by a turing machine furthermore he states that it is an open empirical question whether any such processes are involved in the working of the human brain 91 64 93 there are also some important open questions which cover the relationship between the church turing thesis and physics and the possibility of hypercomputation when applied to physics the thesis has several possible meanings the universe is equivalent to a turing machine thus computing non recursive functions is physically impossible this has been termed the strong church turing thesis or church turing deutsch principle and is a foundation of digital physics the universe is not equivalent to a turing machine i e the laws of physics are not turing computable but incomputable physical events are not harnessable for the construction of a hypercomputer for example a universe in which physics involves random real numbers as opposed to computable reals would fall into this category the universe is a hypercomputer and it is possible to build physical devices to harness this property and calculate non recursive functions for example it is an open question whether all quantum mechanical events are turing computable although it is known that rigorous models such as quantum turing machines are equivalent to deterministic turing machines they are not necessarily efficiently equivalent see above john lucas and roger penrose have suggested that the human mind might be the result of some kind of quantum mechanically enhanced non algorithmic computation 91 65 93 91 66 93 there are many other technical possibilities which fall outside or between these three categories but these serve to illustrate the range of the concept philosophical aspects of the thesis regarding both physical and biological computers are also discussed in odifreddi s 1989 textbook on recursion theory 91 67 93 58 8202 101 123 8202 non computable functions edit this section relies largely or entirely upon a single source relevant discussion may be found on the talk page please help improve this article by introducing citations to additional sources november 2017 learn how and when to remove this template message one can formally define functions that are not computable a well known example of such a function is the busy beaver function this function takes an input n and returns the largest number of symbols that a turing machine with n states can print before halting when run with no input finding an upper bound on the busy beaver function is equivalent to solving the halting problem a problem known to be unsolvable by turing machines since the busy beaver function cannot be computed by turing machines the church turing thesis states that this function cannot be effectively computed by any method several computational models allow for the computation of church turing non computable functions these are known as hypercomputers mark burgin argues that super recursive algorithms such as inductive turing machines disprove the church turing thesis 91 68 93 91 page 160 needed 93 his argument relies on a definition of algorithm broader than the ordinary one so that non computable functions obtained from some inductive turing machines are called computable this interpretation of the church turing thesis differs from the interpretation commonly accepted in computability theory discussed above the argument that super recursive algorithms are indeed algorithms in the sense of the church turing thesis has not found broad acceptance within the computability research community 91 citation needed 93 see also edit abstract machine church s thesis in constructive mathematics church turing deutsch principle which states that every physical process can be simulated by a universal computing device computability logic computability theory decidability hypercomputation model of computation oracle computer science super recursive algorithm turing completeness footnotes edit robert soare turing oracle machines online computing and three displacements in computability theory rabin michael o june 2012 turing church g del computability complexity and randomization a personal view event occurs at 9 36 retrieved 2021 12 05 cite av media cs1 maint url status link correspondence between max newman and church in alonzo church papers turing alan 2004 the essential turing 160 seminal writings in computing logic philosophy artificial intelligence and artificial life plus the secrets of enigma pdf oxford clarendon press p 160 44 isbn 160 9780198250791 retrieved 2021 12 06 a b soare robert i september 1996 computability and recursion bulletin of symbolic logic 2 3 284 321 citeseerx 160 10 1 1 35 5803 doi 10 2307 420992 jstor 160 420992 s2cid 160 5894394 church s paper was presented to the american mathematical society on 19 april 1935 and published on 15 april 1936 turing who had made substantial progress in writing up his own results was disappointed to learn of church s proof upon its publication 91 3 93 91 4 93 turing quickly completed his paper and rushed it to publication it was received by the proceedings of the london mathematical society on 28 may 1936 read on 12 november 1936 and published in series 2 volume 42 1936 1937 it appeared in two sections in part 3 pages 230 240 issued on 30 november 1936 and in part 4 pages 241 265 issued on 23 december 1936 turing added corrections in volume 43 1937 pp 544 546 91 5 93 58 8202 45 8202 church 1936a kleene 1936 turing 1937a kleene 1936 turing 1937b proof outline on p 160 153 x03bb definable displaystyle lambda mbox definable x27f9 t r i v displaystyle stackrel triv implies x03bb k definable displaystyle lambda mbox k mbox definable x27f9 160 displaystyle stackrel 160 implies turing computable displaystyle mbox turing computable x27f9 161 displaystyle stackrel 161 implies x03bc recursive displaystyle mu mbox recursive x27f9 k l e e n e displaystyle stackrel kleene implies 91 10 93 x03bb definable displaystyle lambda mbox definable rosser 1939 in davis 1965 225 effective merriam webster s new collegiate dictionary 9th 160 ed see also effective merriam webster s online dictionary 11th 160 ed retrieved 2014 07 26 which also gives these definitions for effective the first producing a decided decisive or desired effect as the definition for sense 1a of the word effective and the second capable of producing a result as part of the synonym discussion of effective there in the introductory part where it summarizes the similarities between the meanings of the words effective effectual efficient and efficacious a b turing a m 1938 systems of logic based on ordinals pdf phd princeton university p 160 8 archived from the original pdf on 2012 10 23 retrieved 2012 06 23 gandy 1980 123 states it this way what is effectively calculable is computable he calls this church s thesis david hilbert and wilhelm ackermann grundz ge der theoretischen logik berlin germany springer 1st ed 1928 6th ed 1972 isbn 160 3 540 05843 5 english translation david hilbert and wilhelm ackermann principles of mathematical logic ams chelsea publishing providence rhode island usa 1950 davis s commentary before church 1936 an unsolvable problem of elementary number theory in davis 1965 88 church uses the words effective calculability on page 100ff in his review of church s thesis after 70 years edited by adam olszewski et al 2006 peter smith s criticism of a paper by muraswski and wolenski suggests 4 lines re the status of the church turing thesis 1 empirical hypothesis 2 axiom or theorem 3 definition 4 explication but smith opines that 4 is indistinguishable from 3 cf smith 2007 07 11 church s thesis after 70 years at http www logicmatters net resources pdfs ctt pdf cf footnote 3 in church 1936a an unsolvable problem of elementary number theory in davis 1965 89 dawson 1997 99 a b sieg 1997 160 sieg 1997 160 quoting from the 1935 letter written by church to kleene cf footnote 3 in g del 1934 in davis 1965 44 cf church 1936 in davis 1965 105ff davis s commentary before g del 1934 in davis 1965 40 for a detailed discussion of g del s adoption of turing s machines as models of computation see shagrir goedel on turing on computability pdf archived from the original pdf on 2015 12 17 retrieved 2016 02 08 91 date 160 missing 93 a b turing 1937a cf editor s footnote to post 1936 finite combinatory process formulation i at davis 1965 289 post 1936 in davis 1965 291 footnote 8 post 1936 in davis 1952 291 sieg 1997 171 and 176 177 turing 1936 1937 in davis 1965 263ff church 1937 turing 1939 in davis 160 cf church 1934 in davis 1965 100 also turing 1939 in davis 1965 160 italics added rosser 1939 in davis 1965 226 kleene 1943 p 160 60 in davis 1965 274 footnotes omitted kleene 1952 300 a b kleene 1952 376 kleene 1952 382 536 gandy 1980 123ff gandy 1980 135 gandy 1980 126 sieg 1998 1999 in sieg sommer amp talcott 2002 390ff also sieg 1997 154ff in a footnote sieg breaks post s 1936 b into b 1 and b 2 and l into l 1 and l 2 and describes d differently with respect to his proposed gandy machine he later adds lc 1 lc 2 ga 1 and ga 2 these are complicated see sieg 1998 1999 in sieg sommer amp talcott 2002 390ff a collection of papers can be found in olszewski wole ski amp janusz 2006 also a review of this collection smith peter 2007 07 11 church s thesis after 70 years pdf see also hodges andrew 2005 did church and turing have a thesis about machines pdf archived from the original pdf on 2016 03 04 retrieved 2014 07 27 g del kurt 1995 193 undecidable diophantine propositions in feferman solomon ed collected works vol 160 3 new york oxford university press p 160 168 isbn 160 978 0 19 507255 6 oclc 160 928791907 kleene 1952 320 gurevich 1988 2 translation of g del 1936 by davis in the undecidable p 83 differing in the use of the word reckonable in the translation in kleene 1952 p 321 horsten in olszewski wole ski amp janusz 2006 256 gabbay 2001 284 piccinini gualtiero january 2007 computationalism the church turing thesis and the church turing fallacy pdf synthese 154 1 97 120 citeseerx 160 10 1 1 360 9796 doi 10 1007 s11229 005 0194 z s2cid 160 494161 archived pdf from the original on 2008 04 24 arora sanjeev barak boaz 2009 complexity theory a modern approach cambridge university press isbn 160 978 0 521 42426 4 sections 1 4 machines as strings and the universal turing machine and 1 7 proof of theorem 1 9 official problem description pdf archived from the original pdf on 2005 11 24 a b kaye phillip laflamme raymond mosca michele 2007 an introduction to quantum computing oxford university press pp 160 5 6 isbn 160 978 0 19 857049 3 van emde boas peter 1990 machine models and simulations handbook of theoretical computer science a elsevier p 160 5 slot c van emde boas p december 1984 on tape versus core an application of space efficient perfect hash functions to the invariance of space stoc eberbach amp wegner 2003 p 160 287 abramson darren 2011 philosophy of mind is in part philosophy of computer science minds and machines 21 2 203 219 doi 10 1007 s11023 011 9236 0 s2cid 160 32116031 copeland b jack 2017 11 10 the church turing thesis in zalta edward n ed stanford encyclopedia of philosophy for a good place to encounter original papers see chalmers david j ed 2002 philosophy of mind classical and contemporary readings new york oxford university press isbn 160 978 0 19 514581 6 oclc 160 610918145 copeland b jack 2004 computation in floridi luciano ed the blackwell guide to the philosophy of computing and information wiley blackwell p 160 15 isbn 160 978 0 631 22919 3 cf penrose roger 1990 algorithms and turing machines the emperor s new mind concerning computers minds and the laws of physics oxford oxford university press pp 160 47 49 isbn 160 978 0 19 851973 7 oclc 160 456785846 also the description of the non algorithmic nature of mathematical insight penrose roger 1990 where lies the physics of mind the emperor s new mind concerning computers minds and the laws of physics oxford oxford university press pp 160 416 418 isbn 160 978 0 19 851973 7 oclc 160 456785846 piergiorgio odifreddi 1989 classical recursion theory studies in logic and the foundations of mathematics vol 160 125 amsterdam netherlands north holland burgin mark 2005 super recursive algorithms monographs in computer science new york springer isbn 160 978 0 387 95569 8 oclc 160 990755791 references edit barwise jon keisler h j kunen kenneth eds 1980 the kleene symposium amsterdam north holland publishing company isbn 160 978 0 444 85345 5 ben amram a m 2005 the church turing thesis and its look alikes ps sigact news 36 3 113 116 citeseerx 160 10 1 1 74 7308 doi 10 1145 1086649 1086651 s2cid 160 13566703 bernstein e vazirani u 1997 quantum complexity theory siam journal on computing 26 5 1411 1473 citeseerx 160 10 1 1 655 1186 doi 10 1137 s0097539796300921 blass andreas gurevich yuri october 2003 algorithms a quest for absolute definitions pdf bulletin of european association for theoretical computer science 81 archived pdf from the original on 2004 07 27 91 page 160 needed 93 burgin mark 2005 super recursive algorithms monographs in computer science springer isbn 160 978 0 387 95569 8 church alonzo 1932 a set of postulates for the foundation of logic annals of mathematics 33 2 346 366 doi 10 2307 1968337 jstor 160 1968337 church alonzo april 1936a an unsolvable problem of elementary number theory pdf american journal of mathematics 58 2 345 363 doi 10 2307 2371045 jstor 160 2371045 s2cid 160 14181275 archived from the original pdf on 2020 02 27 church alonzo june 1936b a note on the entscheidungsproblem journal of symbolic logic 1 1 40 41 doi 10 2307 2269326 jstor 160 2269326 s2cid 160 42323521 church alonzo march 1937 review a m turing on computable numbers with an application to the entscheidungsproblem journal of symbolic logic 2 1 42 43 doi 10 2307 2268810 jstor 160 2268810 church alonzo 1941 the calculi of lambda conversion princeton princeton university press cooper s b odifreddi p 2003 incomputability in nature in s b cooper s s goncharov eds computability and models perspectives east and west kluwer academic plenum publishers pp 160 137 160 davis martin ed 1965 the undecidable basic papers on undecidable propositions unsolvable problems and computable functions new york raven press includes original papers by g del church turing rosser kleene and post mentioned in this section dawson john w jr 1997 logical dilemmas the life and work of kurt g del wellesley massachusetts usa a k peters eberbach e wegner p october 2003 beyond turing machines pdf bulletin of the european association for theoretical computer science 81 279 304 citeseerx 160 10 1 1 61 9759 archived pdf from the original on 2016 03 15 gabbay d m 2001 handbook of philosophical logic vol 160 1 2nd 160 ed gandy robin 1980 church s thesis and the principles for mechanisms in h j barwise h j keisler k kunen eds the kleene symposium north holland publishing company pp 160 123 148 gandy robin 1994 herken rolf ed the universal turing machine a half century survey new york wien springer verlag pp 160 51ff isbn 160 978 3 211 82637 9 g del kurt 1965 1934 on undecidable propositions of formal mathematical systems in davis martin ed the undecidable kleene and rosser lecture note takers institute for advanced study lecture sponsor new york raven press g del kurt 1936 ber die l ange von beweisen 91 on the length of proofs 93 ergenbnisse eines mathematishen kolloquiums in german heft 7 23 24 cited by kleene 1952 gurevich yuri june 1988 on kolmogorov machines and related issues bulletin of european association for theoretical computer science 35 71 82 gurevich yuri july 2000 sequential abstract state machines capture sequential algorithms pdf acm transactions on computational logic 1 1 77 111 citeseerx 160 10 1 1 146 3017 doi 10 1145 343369 343384 s2cid 160 2031696 archived pdf from the original on 2003 10 16 herbrand jacques 1932 sur la non contradiction de l arithm tique journal f r die reine und angewandte mathematik in french 166 1 8 hofstadter douglas r chapter xvii church turing tarski and others g del escher bach an eternal golden braid 91 pages 160 needed 93 kleene stephen cole january 1935 a theory of positive integers in formal logic american journal of mathematics 57 1 153 173 amp 219 244 doi 10 2307 2372027 jstor 160 2372027 kleene stephen cole 1936 lambda definability and recursiveness duke mathematical journal 2 2 340 353 doi 10 1215 s0012 7094 36 00227 2 kleene stephen cole 1943 recursive predicates and quantifiers transactions of the american mathematical society 53 1 41 73 doi 10 2307 1990131 jstor 160 1990131 reprinted in the undecidable p 160 255ff kleene refined his definition of general recursion and proceeded in his chapter 12 algorithmic theories to posit thesis i p 160 274 he would later repeat this thesis in kleene 1952 300 and name it church s thesis kleene 1952 317 i e the church thesis kleene stephen cole 1952 introduction to metamathematics north holland oclc 160 523942 knuth donald 1973 the art of computer programming vol 160 1 fundamental algorithms 2nd 160 ed addison wesley kugel peter november 2005 it s time to think outside the computational box communications of the acm 48 11 32 37 citeseerx 160 10 1 1 137 6939 doi 10 1145 1096000 1096001 s2cid 160 29843806 lewis h r papadimitriou c h 1998 elements of the theory of computation upper saddle river new jersey usa prentice hall manna zohar 2003 1974 mathematical theory of computation dover isbn 160 978 0 486 43238 0 markov a a 1960 1954 the theory of algorithms american mathematical society translations 2 15 1 14 olszewski adam wole ski jan janusz robert eds 2006 church s thesis after 70 years frankfurt ontos isbn 160 978 3 938793 09 1 oclc 160 909679288 pour el m b richards j i 1989 computability in analysis and physics springer verlag rosser j b 1939 an informal exposition of proofs of godel s theorem and church s theorem the journal of symbolic logic 4 2 53 60 doi 10 2307 2269059 jstor 160 2269059 s2cid 160 39499392 sieg wilfried sommer richard talcott carolyn eds 2002 reflections on the foundations of mathematics essays in honor of solomon feferman lecture notes in logic vol 160 15 a k peters ltd isbn 160 978 1 56881 169 7 syropoulos apostolos 2008 hypercomputation computing beyond the church turing barrier springer isbn 160 978 0 387 30886 9 turing a m 1937a delivered to the society november 1936 on computable numbers with an application to the entscheidungsproblem pdf proceedings of the london mathematical society 2 vol 160 42 pp 160 230 265 doi 10 1112 plms s2 42 1 230 s2cid 160 73712 and turing a m 1938 on computable numbers with an application to the entscheidungsproblem a correction proceedings of the london mathematical society 2 vol 160 43 published 1937 pp 160 544 546 doi 10 1112 plms s2 43 6 544 see also davis 1965 115ff turing alan mathison december 1937b computability and definability pdf journal of symbolic logic 2 4 153 163 doi 10 2307 2268280 jstor 160 2268280 s2cid 160 2317046 archived from the original pdf on 2020 08 09 external links edit the church turing thesis entry by b jack copeland in the stanford encyclopedia of philosophy computation in physical systems entry by gualtiero piccinini in the stanford encyclopedia of philosophy a comprehensive philosophical treatment of relevant issues kaznatcheev artem 2014 09 11 transcendental idealism and post s variant of the church turing thesis journal of symbolic logic 1 3 103 105 a special issue vol 28 no 4 1987 of the notre dame journal of formal logic was devoted to the church turing thesis vtealonzo churchnotable ideas lambda calculus simply typed lambda calculus church turing thesis church encoding frege church ontology institutions princeton university university of california los angeles vtemathematical logicgeneral axiom list cardinality first order logic formal proof formal semantics foundations of mathematics information theory logical consequence model set theorem theory type theory theorems 160 list 160 amp 160 paradoxes g del s completeness 160 and 160 incompleteness theorems tarski s undefinability banach tarski paradox cantor s 160 theorem 160 paradox 160 and 160 diagonal argument compactness halting problem lindstr m s l wenheim skolem russell s paradox logicstraditional classical logic logical truth tautology proposition inference logical equivalence consistency equiconsistency argument soundness validity syllogism square of opposition venn diagram propositional boolean algebra boolean functions logical connectives propositional calculus propositional formula truth tables many valued logic 3 finite predicate first order list second order monadic higher order free quantifiers predicate monadic predicate calculus set theory set hereditary class ur element ordered pair ordinal number subset equality extensionality forcing relation equivalence partition set operations intersection union complement cartesian product power set identities types of sets countable uncountable empty inhabited singleton finite infinite transitive ultrafilter recursive fuzzy universal universe constructible grothendieck von neumann maps 160 amp 160 cardinality function map domain codomain image in sur bi jection schr der bernstein theorem isomorphism g del numbering enumeration large cardinal inaccessible aleph number operation binary set theories zermelo fraenkel axiom of choice continuum hypothesis general kripke platek morse kelley naive new foundations tarski grothendieck von neumann bernays g del constructive formal systems 160 list language 160 amp 160 syntax alphabet arity automata axiom schema expression ground extension by definition conservative relation formation rule grammar formula atomic closed ground open free bound variable language metalanguage logical connective predicate functional variable propositional variable proof quantifier rank sentence atomic spectrum signature string substitution symbol function logical constant non logical variable term theory list example 160 axiomaticsystems 160 list of arithmetic peano second order elementary function primitive recursive robinson skolem of the real numbers tarski s axiomatization of boolean algebras canonical minimal axioms of geometry euclidean elements hilbert s non euclidean tarski s principia mathematica proof theory formal proof natural deduction logical consequence rule of inference sequent calculus theorem systems axiomatic deductive hilbert list complete theory independence 160 from 160 zfc proof of impossibility ordinal analysis reverse mathematics self verifying theories model theory interpretation model equivalence finite saturated spectrum substructure non standard model of arithmetic diagram elementary categorical theory model complete theory satisfiability semantics of logic strength theories of truth semantic tarski s kripke s t schema transfer principle truth predicate truth value type ultraproduct validity computability theory church encoding church turing thesis computably enumerable computable function computable set decision problem decidable undecidable p np p versus np problem kolmogorov complexity lambda calculus primitive recursive function recursion recursive set turing machine type theory related abstract logic category theory concrete abstract category category of sets history of logic history of mathematical logic timeline logicism mathematical object philosophy of mathematics supertask 160 mathematics 32 portal vtemetalogic and metamathematics cantor s theorem entscheidungsproblem church turing thesis consistency effective method foundations of mathematics of geometry g del s completeness theorem g del s incompleteness theorems soundness completeness decidability interpretation l wenheim skolem theorem metatheorem satisfiability independence type token distinction use mention distinction authority control national libraries france data germany other sudoc france 1 retrieved from https en wikipedia org w index php title church turing thesis amp oldid 1125072499 categories computability theoryalan turingtheory of computationphilosophy of computer sciencehidden categories cs1 maint url statusarticles with short descriptionshort description is different from wikidatause dmy dates from august 2022all articles with unsourced statementsarticles with unsourced statements from november 2019all wikipedia articles needing clarificationwikipedia articles needing clarification from march 2019articles needing additional references from november 2017all articles needing additional referenceswikipedia articles needing page number citations from november 2017articles with unsourced statements from may 2020cs1 german language sources de cs1 french language sources fr cs1 long volume valuearticles with stanford encyclopedia of philosophy linksarticles with bnf identifiersarticles with gnd identifiersarticles with sudoc identifiers 